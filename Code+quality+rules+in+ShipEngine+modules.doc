Date: Fri, 1 Dec 2023 07:28:50 +0000 (UTC)
Message-ID: <313736074.133.1701415730007@0143ef65a013>
Subject: Exported From Confluence
MIME-Version: 1.0
Content-Type: multipart/related; 
	boundary="----=_Part_132_983614430.1701415730007"

------=_Part_132_983614430.1701415730007
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/exported.html

<html xmlns:o=3D'urn:schemas-microsoft-com:office:office'
      xmlns:w=3D'urn:schemas-microsoft-com:office:word'
      xmlns:v=3D'urn:schemas-microsoft-com:vml'
      xmlns=3D'urn:w3-org-ns:HTML'>
<head>
    <meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3Dutf-8=
">
    <title>Code quality rules in ShipEngine modules</title>
    <!--[if gte mso 9]>
    <xml>
        <o:OfficeDocumentSettings>
            <o:TargetScreenSize>1024x640</o:TargetScreenSize>
            <o:PixelsPerInch>72</o:PixelsPerInch>
            <o:AllowPNG/>
        </o:OfficeDocumentSettings>
        <w:WordDocument>
            <w:View>Print</w:View>
            <w:Zoom>90</w:Zoom>
            <w:DoNotOptimizeForBrowser/>
        </w:WordDocument>
    </xml>
    <![endif]-->
    <style>
                <!--
        @page Section1 {
            size: 8.5in 11.0in;
            margin: 1.0in;
            mso-header-margin: .5in;
            mso-footer-margin: .5in;
            mso-paper-source: 0;
        }

        table {
            border: solid 1px;
            border-collapse: collapse;
        }

        table td, table th {
            border: solid 1px;
            padding: 5px;
        }

        td {
            page-break-inside: avoid;
        }

        tr {
            page-break-after: avoid;
        }

        div.Section1 {
            page: Section1;
        }

        /* Confluence print stylesheet. Common to all themes for print medi=
a */
/* Full of !important until we improve batching for print CSS */

@media print {
    #main {
        padding-bottom: 1em !important; /* The default padding of 6em is to=
o much for printouts */
    }

    body {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        font-size: 10pt;
        line-height: 1.2;
    }

    body, #full-height-container, #main, #page, #content, .has-personal-sid=
ebar #content {
        background: var(--ds-surface, #fff) !important;
        color: var(--ds-text, #000) !important;
        border: 0 !important;
        width: 100% !important;
        height: auto !important;
        min-height: auto !important;
        margin: 0 !important;
        padding: 0 !important;
        display: block !important;
    }

    a, a:link, a:visited, a:focus, a:hover, a:active {
        color: var(--ds-text, #000);
    }

    #content h1,
    #content h2,
    #content h3,
    #content h4,
    #content h5,
    #content h6 {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        page-break-after: avoid;
    }

    pre {
        font-family: Monaco, "Courier New", monospace;
    }

    #header,
    .aui-header-inner,
    #navigation,
    #sidebar,
    .sidebar,
    #personal-info-sidebar,
    .ia-fixed-sidebar,
    .page-actions,
    .navmenu,
    .ajs-menu-bar,
    .noprint,
    .inline-control-link,
    .inline-control-link a,
    a.show-labels-editor,
    .global-comment-actions,
    .comment-actions,
    .quick-comment-container,
    #addcomment {
        display: none !important;
    }

    /* CONF-28544 cannot print multiple pages in IE */
    #splitter-content {
        position: relative !important;
    }

    .comment .date::before {
        content: none !important; /* remove middot for print view */
    }

    h1.pagetitle img {
        height: auto;
        width: auto;
    }

    .print-only {
        display: block;
    }

    #footer {
        position: relative !important; /* CONF-17506 Place the footer at en=
d of the content */
        margin: 0;
        padding: 0;
        background: none;
        clear: both;
    }

    #poweredby {
        border-top: none;
        background: none;
    }

    #poweredby li.print-only {
        display: list-item;
        font-style: italic;
    }

    #poweredby li.noprint {
        display: none;
    }

    /* no width controls in print */
    .wiki-content .table-wrap,
    .wiki-content p,
    .panel .codeContent,
    .panel .codeContent pre,
    .image-wrap {
        overflow: visible !important;
    }

    /* TODO - should this work? */
    #children-section,
    #comments-section .comment,
    #comments-section .comment .comment-body,
    #comments-section .comment .comment-content,
    #comments-section .comment p {
        page-break-inside: avoid;
    }

    #page-children a {
        text-decoration: none;
    }

    /**
     hide twixies

     the specificity here is a hack because print styles
     are getting loaded before the base styles. */
    #comments-section.pageSection .section-header,
    #comments-section.pageSection .section-title,
    #children-section.pageSection .section-header,
    #children-section.pageSection .section-title,
    .children-show-hide {
        padding-left: 0;
        margin-left: 0;
    }

    .children-show-hide.icon {
        display: none;
    }

    /* personal sidebar */
    .has-personal-sidebar #content {
        margin-right: 0px;
    }

    .has-personal-sidebar #content .pageSection {
        margin-right: 0px;
    }

    .no-print, .no-print * {
        display: none !important;
    }
}
-->
    </style>
</head>
<body>
    <h1>Code quality rules in ShipEngine modules</h1>
    <div class=3D"Section1">
        <h1 id=3D"CodequalityrulesinShipEnginemodules-Intro">Intro</h1>
<p>Remember to attach the ESlint rules file to the project, which helps to =
avoid most issues described below.</p>
<p><a href=3D"/wiki/spaces/GOLD/pages/3824648803/ESLint" data-linked-resour=
ce-id=3D"3824648803" data-linked-resource-version=3D"8" data-linked-resourc=
e-type=3D"page">ESLint - Carrier Development - Confluence (atlassian.net)</=
a></p>
<h1 id=3D"CodequalityrulesinShipEnginemodules-Namingconventions:">Naming co=
nventions:</h1>
<ol start=3D"1">
<li><p>File names should be built using the <em><strong>kebab-case</strong>=
</em> naming convention e.g <code>kebab-case-example</code></p></li>
<li><p>Classes and interfaces should be built using the <em><strong>PascalC=
ase </strong></em>naming convention e.g <code>ExampleClass</code></p></li>
<li><p>Variables and fields should be build uding <strong>camelCase </stron=
g>naming convenction e.g <code>exampleVariable</code></p></li>
<li><p>Interfaces that contain required methods to be implemented should st=
art from '<em><strong>I</strong></em>'(except request-response models) e.g =
<code>IValidation</code>, <code>ShippingThirdPartyResponse</code></p></li>
<li><p>The function and array methods should be built using the <em><strong=
>Pascal </strong></em>naming convention e.g <code>DoSmth()</code></p></li>
<li><p>Parameters using an object shared with SE API (like metadata) should=
 be built using the <em><strong>under_score </strong></em>naming convention=
, e.g <code>client_id</code></p></li>
<li><p>If a variable is const use the <em><strong>UPPER_SCORE </strong></em=
>naming convention, e.g <code>MAX_WEIGHT</code></p></li>
</ol>
<h1 id=3D"CodequalityrulesinShipEnginemodules-Goodcodepractices:">Good code=
 practices:</h1>
<ol start=3D"1">
<li><p>Use strong types always if possible</p></li>
<li><p>Use <code>const</code> and <code>let</code> keyword if possible, nev=
er <code>var</code>.</p></li>
<li><p>Don=E2=80=99t mix <code>await</code>/<code>async</code> with <code>P=
romise</code>().<code>Than</code>().<code>Catch</code>(), instead use one o=
f them.</p></li>
<li><p>Use <code>=3D=3D=3D</code> and <code>!=3D=3D</code> instead of <code=
>=3D=3D</code> or <code>!=3D</code></p></li>
<li><p>It is strongly recommended that the&nbsp;<a href=3D"https://develope=
r.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators#assignment_oper=
ators" class=3D"external-link" rel=3D"nofollow"><u>assignment operators</u>=
</a>&nbsp;(<code>+</code>,&nbsp;<code>+=3D</code>) are used instead of the&=
nbsp;<code>concat()</code>&nbsp;method</p></li>
<li><p>It is recommended to use shorter forms to check null or empty string=
 values e.g<br>Bad:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence"> if(cou=
ntry =3D=3D=3D null || country =3D=3D=3D undefined) {}</pre>=20
</div>
</div><p>Good:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">if(!cou=
ntry) {}</pre>=20
</div>
</div></li>
<li><p>It is recommended to use null safe access pointer '<em>?</em>' e.g <=
br>Bad: </p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">if(some=
thing =3D=3D=3D null &amp;&amp; something.more =3D=3D=3D null) {}</pre>=20
</div>
</div><p>Good:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">if(!som=
ething?.more) {}</pre>=20
</div>
</div></li>
<li><p>Create const functions instead of statement functions, e.g:<br>Good:=
 </p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">const c=
ounter =3D (x) =3D&gt; {}</pre>=20
</div>
</div><p>Bad: </p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">functio=
n counter(x) {}</pre>=20
</div>
</div></li>
<li><p>Keep communication models and third-party connector helpers outside =
main SE Connect methods. </p></li>
<li><p>Remove unused imports and packages</p></li>
</ol>
<p><br></p>
<p></p>
    </div>
</body>
</html>
------=_Part_132_983614430.1701415730007--
